#include "Dump.class.hpp"

// STATIC ########################################################

// ###############################################################

// CANONICAL #####################################################

Dump::Dump ( void )
{
	return ;
}

Dump::Dump ( Dump const & src )
{
	*this = src;
	return ;
}

Dump &				Dump::operator=( Dump const & rhs )
{
	if (this != &rhs)
	{
		// make stuff
	}
	return (*this);
}

Dump::~Dump ( void )
{
	return ;
}

// ###############################################################

// CONSTRUCTOR POLYMORPHISM ######################################

// ###############################################################

// OVERLOAD OPERATOR #############################################

std::ostream &				operator<<(std::ostream & o, Dump const & i)
{
	(void)i;
	return (o);
}

// ###############################################################

// PUBLIC METHOD #################################################

void Dump::Execute(std::vector<IOperand const *> * stack)
{
	for (size_t z = 0; z < stack->size(); z++)
		std::cout << (*stack)[z]->toString() << std::endl;
}

// ###############################################################

// GETTER METHOD #################################################

// ###############################################################

// SETTER METHOD #################################################

// ###############################################################

// PRIVATE METHOD ################################################

// ###############################################################

// EXCEPTION METHOD ##############################################

// ###############################################################

// EXTERNAL ######################################################

// ###############################################################
